/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CardBack.java
 *
 * Created on May 3, 2010, 5:03:45 PM
 */

/**
 *
 * @author aidandaly
 */
import java.awt.*;
import java.awt.image.*;
import javax.swing.*;
import java.io.File;


public class CardBack extends javax.swing.JPanel {

    /** Creates new form CardBack */
    public CardBack() {
        initComponents();
    }

    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D)g;
        String dir = System.getProperty("user.dir");
        String imagePath = dir+"/src/cardback.jpg";
        img = CardPanel.getBufferedImage(imagePath, this);
        Rectangle imageRect = new Rectangle(0, 0, 138, 176);
        TexturePaint imagePaint1 = new TexturePaint(img, imageRect);
        g2d.setPaint(imagePaint1);
        g2d.fill(imageRect);
        g2d.draw(imageRect);
    }

    public static BufferedImage getBufferedImage(String imageFile, Component c)
    {
        Image image = c.getToolkit().getImage(imageFile);
        waitForImage(image, c);
        /*BufferedImage bufferedImage = new BufferedImage(image.getWidth(c),
                image.getHeight(c), BufferedImage.TYPE_INT_RGB);*/
        BufferedImage bufferedImage = new BufferedImage(100,
                100, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = bufferedImage.createGraphics();
        g2d.drawImage(image, 0, 0, 100,100,c);
        return(bufferedImage);
    }
/** Take an Image associated with a file, and wait until it is * done loading (just a simple application of MediaTracker). * If you are loading multiple images, don't use this * consecutive times; instead, use the version that takes
* an array of images. */
    public static boolean waitForImage(Image image, Component c)
    {
        MediaTracker tracker = new MediaTracker(c);
        tracker.addImage(image, 0);
        try { tracker.waitForAll(); }
        catch(InterruptedException ie) {}
        return(!tracker.isErrorAny());
    }


    public static void main(String args[]) {
        JFrame j = new JFrame();
        CardBack p = new CardBack();
        j.add(p);
        j.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        j.setBounds(0, 0, 138, 176);
        j.setVisible(true);
    }

    private BufferedImage img;
    private File f;


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        setPreferredSize(new java.awt.Dimension(138, 176));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 231, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 290, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
